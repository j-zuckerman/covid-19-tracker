{"version":3,"sources":["context/index.js","components/LineChart/LineChart.js","components/Cards/Cards.js","components/CountrySelect/CountrySelect.js","components/App.js","index.js","components/LineChart/styles.module.css","components/styles.module.css"],"names":["CovidContext","createContext","CovidProvider","children","useState","covidStats","setCovidStats","timeSeriesData","setTimeSeriesData","countries","setCountries","a","fetch","response","json","data","map","country","name","value","countryInfo","iso2","fetchGlobalCovidStats","console","log","fetchGlobalTimeSeriesData","dates","formattedCases","formattedDeaths","formattedRecoveries","cases","Object","entries","forEach","e","push","deaths","recovered","recoveries","fetchCovidStats","timeline","useEffect","fetchCountryData","Provider","fetchTimeSeriesData","LineChart","useContext","className","styles","container","linechart","labels","datasets","label","borderColor","Cards","type","Grid","spacing","justify","item","Card","CardContent","Typography","variant","NumAbbr","todayCases","todayDeaths","todayRecovered","CountrySelect","handleCountryChange","target","style","marginTop","FormControl","NativeSelect","defaultValue","onChange","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ab32390a.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const CovidContext = createContext();\r\n\r\nconst CovidProvider = ({ children }) => {\r\n  const [covidStats, setCovidStats] = useState(null);\r\n  const [timeSeriesData, setTimeSeriesData] = useState(null);\r\n  const [countries, setCountries] = useState(null);\r\n\r\n  async function fetchCountryData() {\r\n    const response = await fetch('https://disease.sh/v3/covid-19/countries');\r\n    let data = await response.json();\r\n\r\n    const countries = data.map((country) => ({\r\n      name: country.country,\r\n      value: country.countryInfo.iso2,\r\n    }));\r\n\r\n    setCountries(countries);\r\n  }\r\n\r\n  async function fetchGlobalCovidStats() {\r\n    const response = await fetch(\r\n      'https://disease.sh/v3/covid-19/all?yesterday=true'\r\n    );\r\n    let data = await response.json();\r\n    console.log(data);\r\n    setCovidStats(data);\r\n  }\r\n\r\n  async function fetchGlobalTimeSeriesData() {\r\n    const response = await fetch(\r\n      `https://disease.sh/v3/covid-19/historical/all?lastdays=30`\r\n    );\r\n\r\n    let data = await response.json();\r\n\r\n    let dates = [];\r\n    let formattedCases = [];\r\n    let formattedDeaths = [];\r\n    let formattedRecoveries = [];\r\n\r\n    const cases = Object.entries(data.cases);\r\n    cases.forEach((e) => formattedCases.push(e[1]));\r\n    cases.forEach((e) => dates.push(e[0]));\r\n\r\n    const deaths = Object.entries(data.deaths);\r\n    deaths.forEach((e) => formattedDeaths.push(e[1]));\r\n\r\n    const recoveries = Object.entries(data.recovered);\r\n    recoveries.forEach((e) => formattedRecoveries.push(e[1]));\r\n\r\n    let timeSeriesData = {\r\n      dates: dates,\r\n      cases: formattedCases,\r\n      deaths: formattedDeaths,\r\n      recoveries: formattedRecoveries,\r\n    };\r\n\r\n    console.log(timeSeriesData);\r\n    setTimeSeriesData(timeSeriesData);\r\n  }\r\n\r\n  async function fetchCovidStats(country) {\r\n    const response = await fetch(\r\n      `https://disease.sh/v3/covid-19/countries/${country}?yesterday=true`\r\n    );\r\n    let data = await response.json();\r\n\r\n    setCovidStats(data);\r\n  }\r\n\r\n  async function fetchTimeSeriesData(country) {\r\n    const response = await fetch(\r\n      `https://disease.sh/v3/covid-19/historical/${country}?lastdays=30`\r\n    );\r\n\r\n    let data = await response.json();\r\n    console.log(data);\r\n    let dates = [];\r\n    let formattedCases = [];\r\n    let formattedDeaths = [];\r\n    let formattedRecoveries = [];\r\n\r\n    const cases = Object.entries(data.timeline.cases);\r\n    cases.forEach((e) => formattedCases.push(e[1]));\r\n    cases.forEach((e) => dates.push(e[0]));\r\n\r\n    const deaths = Object.entries(data.timeline.deaths);\r\n    deaths.forEach((e) => formattedDeaths.push(e[1]));\r\n\r\n    const recoveries = Object.entries(data.timeline.recovered);\r\n    recoveries.forEach((e) => formattedRecoveries.push(e[1]));\r\n\r\n    let timeSeriesData = {\r\n      dates: dates,\r\n      cases: formattedCases,\r\n      deaths: formattedDeaths,\r\n      recoveries: formattedRecoveries,\r\n    };\r\n\r\n    console.log(timeSeriesData);\r\n    setTimeSeriesData(timeSeriesData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCountryData();\r\n    fetchGlobalCovidStats();\r\n    fetchGlobalTimeSeriesData();\r\n  }, []);\r\n\r\n  return (\r\n    <CovidContext.Provider\r\n      value={{\r\n        covidStats,\r\n        timeSeriesData,\r\n        fetchCovidStats,\r\n        fetchTimeSeriesData,\r\n        fetchGlobalTimeSeriesData,\r\n        countries,\r\n        fetchGlobalCovidStats,\r\n        fetchCovidStats,\r\n      }}\r\n    >\r\n      {children}\r\n    </CovidContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CovidProvider;\r\n","import React, { useContext } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { CovidContext } from '../../context';\r\nimport styles from './styles.module.css';\r\n\r\nexport default function LineChart() {\r\n  const { timeSeriesData } = useContext(CovidContext);\r\n\r\n  if (timeSeriesData !== null)\r\n    return (\r\n      <div className={styles.container}>\r\n        <Line\r\n          className={styles.linechart}\r\n          data={{\r\n            labels: timeSeriesData.dates,\r\n            datasets: [\r\n              {\r\n                data: timeSeriesData.deaths,\r\n                label: 'deaths',\r\n                borderColor: '#9e2b25',\r\n              },\r\n              {\r\n                data: timeSeriesData.cases,\r\n                label: 'cases',\r\n                borderColor: '#0244A1',\r\n              },\r\n              {\r\n                data: timeSeriesData.recoveries,\r\n                label: 'recoveries',\r\n                borderColor: '#439a86',\r\n              },\r\n            ],\r\n          }}\r\n        ></Line>\r\n      </div>\r\n    );\r\n  else return null;\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { CovidContext } from '../../context';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NumAbbr from 'number-abbreviate';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Cards({ type }) {\r\n  const { covidStats } = useContext(CovidContext);\r\n\r\n  if (covidStats === null) return null;\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item>\r\n          <Card className=\"card cases\">\r\n            <CardContent>\r\n              <Typography variant=\"h6\"> Cases</Typography>\r\n              <Typography variant=\"h5\" className=\"text_blue\">\r\n                +{NumAbbr(covidStats.todayCases, 1)} Today\r\n              </Typography>\r\n              <Typography className=\"text_secondary\">\r\n                {NumAbbr(covidStats.cases, 2)} Total\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card className=\"card deaths\">\r\n            <CardContent>\r\n              <Typography variant=\"h6\"> Deaths</Typography>\r\n              <Typography variant=\"h5\" className=\"text_red\">\r\n                +{NumAbbr(covidStats.todayDeaths, 1)} Today\r\n              </Typography>\r\n              <Typography className=\"text_secondary\">\r\n                {NumAbbr(covidStats.deaths, 2)} Total\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card className=\"card recovered\">\r\n            <CardContent>\r\n              <Typography variant=\"h6\"> Recoveries</Typography>\r\n              <Typography variant=\"h5\" className=\"text_green\">\r\n                +{NumAbbr(covidStats.todayRecovered, 1)} Today\r\n              </Typography>\r\n              <Typography className=\"text_secondary\">\r\n                {NumAbbr(covidStats.recovered, 2)} Total\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { CovidContext } from '../../context';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport './styles.css';\r\n\r\nexport default function CountrySelect() {\r\n  const {\r\n    countries,\r\n    fetchGlobalCovidStats,\r\n    fetchCovidStats,\r\n    fetchTimeSeriesData,\r\n    fetchGlobalTimeSeriesData,\r\n  } = useContext(CovidContext);\r\n\r\n  const handleCountryChange = async (e) => {\r\n    const country = e.target.value;\r\n    console.log(country);\r\n    if (country === 'global') {\r\n      fetchGlobalCovidStats();\r\n      fetchGlobalTimeSeriesData();\r\n    } else {\r\n      fetchCovidStats(country);\r\n      fetchTimeSeriesData(country);\r\n    }\r\n  };\r\n\r\n  if (countries === null) return null;\r\n  return (\r\n    <div style={{ marginTop: '2rem' }}>\r\n      <FormControl className=\"country_selector\">\r\n        <NativeSelect defaultValue={'global'} onChange={handleCountryChange}>\r\n          <option value={'global'}>Global</option>\r\n          {countries.map((country) => (\r\n            <option value={country.value}>{country.name}</option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport CovidProvider from '../context';\nimport LineChart from './LineChart/LineChart';\nimport Cards from './Cards/Cards';\nimport CountrySelect from './CountrySelect/CountrySelect';\nimport styles from './styles.module.css';\nimport Typography from '@material-ui/core/Typography';\n\nfunction App() {\n  return (\n    <CovidProvider>\n      <div className={styles.container}>\n        <Typography variant=\"h2\">Covid-19 Tracker</Typography>\n        <CountrySelect></CountrySelect>\n        <Cards></Cards>\n        <LineChart></LineChart>\n      </div>\n    </CovidProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1GOKA\",\"linechart\":\"styles_linechart__8E3Nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2PRCE\"};"],"sourceRoot":""}